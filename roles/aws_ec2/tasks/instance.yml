---
- name: Create EC2 key
  amazon.aws.ec2_key:
    name: ansible
    region: "{{ aws_region }}"
  register: _key

- name: Display key info
  ansible.builtin.debug:
    var: _key.key

- name: Save key file
  ansible.builtin.copy:
    content: "{{ _key.key.private_key }}"
    dest: "{{ playbook_dir }}/ansible.pem"
    mode: '400'
  when: _key.key.private_key is defined

- name: Provision EC2 instance
  amazon.aws.ec2_instance:
    name: "{{ aws_ec2_name }}"
    instance_type: "{{ aws_ec2_type }}"
    image_id: "{{ aws_ec2_ami[aws_region] }}"
    volumes:
      - device_name: /dev/sda1
        ebs:
          volume_size: "{{ aws_ec2_disk }}"
          delete_on_termination: true
    vpc_subnet_id: "{{ _subnet.subnet.id }}"
    security_group: "{{ _sg.group_id }}"
    key_name: ansible
    region: "{{ aws_region }}"
    network:
      assign_public_ip: true
      delete_on_termination: true
  register: _instance

- name: Get public IP
  amazon.aws.ec2_instance_info:
    instance_ids: "{{ _instance.instance_ids }}"
    region: us-east-2
  until: _instance.instances.0.public_ip_address is defined
  delay: 2
  retries: 10
  register: _ec2_info_out

- name: Add host to inventory
  ansible.builtin.add_host:
    groups: ec2new
    name: "{{ aws_ec2_name }}"
    ansible_host: "{{ _ec2_info_out.instances.0.public_ip_address }}"
    private_address: "{{ _ec2_info_out.instances.0.private_ip_address }}"
    public_dns: "{{ _ec2_info_out.instances.0.public_dns_name }}"
    ansible_user: ec2-user
    ansible_ssh_private_key_file: "{{ playbook_dir }}/ansible.pem"
